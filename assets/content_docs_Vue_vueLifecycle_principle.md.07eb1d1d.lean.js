import{_ as e,c as t,I as n,E as l,V as p,C as s,J as c,o as r,a as o}from"./chunks/framework.7cada2c9.js";const F="/MyBlog/images/principle.jpg",y="/MyBlog/images/principle1.jpg",D="/MyBlog/images/principle2.jpg",A="/MyBlog/images/principle3.jpg",i="/MyBlog/images/principle4.jpg",C="/MyBlog/images/lifecycle.png",d="/MyBlog/images/lifecycle1.jpg",g="/MyBlog/images/lifecycle2.jpg",u="/MyBlog/images/lifecycle3.jpg",m="/MyBlog/images/lifecycle4.jpg",h="/MyBlog/images/lifecycleResult.jpg",_="/MyBlog/images/lifecycleResult2.jpg",b="/MyBlog/images/debugger.jpg",I=JSON.parse('{"title":"Vue内部运行机制及生命周期","description":"","frontmatter":{"title":"Vue内部运行机制及生命周期","group":"Vue","layout":"doc","date":"2021-01-02T05:54:36.000Z","tags":["Vue"],"sidebar":true,"summary":"Vue内部运行机制、及各生命周期的不同。"},"headers":[],"relativePath":"content/docs/Vue/vueLifecycle&principle.md"}'),f={name:"content/docs/Vue/vueLifecycle&principle.md"},E=p("",7),q=p("",17),x=s("p",null,"修改 data 中的数据：",-1),$=s("img",{style:{display:"table",margin:"auto"},src:_},null,-1),v=s("img",{style:{display:"table",margin:"auto"},src:b},null,-1),T=s("p",null,"通过 debugger 断点查看得到了正确的结果。",-1);function V(M,B,P,j,k,S){const a=c("font");return r(),t("div",null,[E,n(a,{color:"color:#ff0000"},{default:l(()=>[o("\\* **抽象语法树是 JSON 格式的对象**")]),_:1}),q,n(a,{color:"color:#ff0000"},{default:l(()=>[o("\\* **注意 beforeMount 和 mounted 的\\$el 中占位符的替换。**")]),_:1}),x,$,n(a,{color:"color:#ff0000"},{default:l(()=>[o("\\* **注意$el和$data 的打印，update 前后是一样的，而真实 DOM 中的却不一样。查阅原因似乎是\\$el 是虚拟 DOM，本质是一个对象，栈中存放的是内存地址的指针。而 console.log 的特性是在点击输出结果前面的箭头之前，其实里面是没有内容的，当点击时才会根据这个指针去寻找结果然后显示，所以当点击时已经是 updated 生命周期了。所以使用真实 DOM 才会显示的正确的结果。**")]),_:1}),v,T])}const L=e(f,[["render",V]]);export{I as __pageData,L as default};
